[tool.flake8]
max-line-length = 88

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "frontend",
    "core/migrations",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "PL"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/wsgi.py" = ["ALL"]
"**/manage.py" = ["ALL"]

[tool.ruff.lint.pylint]
max-args=6
max-locals=20
max-branches=20

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pylint.main]
ignore = [
  "wsgi.py",
  "manage.py",
]

ignore-paths = [
  "core/migrations",
  "venv",
  "frontend",
]

load-plugins = [
  "pylint_django",
  "pylint_secure_coding_standard",
]

django-settings-module = "multilateralfund.settings"


[tool.pylint."MESSAGES CONTROL"]
disable = [
  "missing-docstring",
  "too-few-public-methods",
  "wrong-import-order",
  "logging-fstring-interpolation",
  "logging-not-lazy",
  "invalid-name",
  "avoid-assert",
  "fixme",
  "consider-using-f-string",
  "duplicate-code",
  "too-many-ancestors",
  "too-many-positional-arguments",
]


[tool.pylint.FORMAT]
max-line-length = "120"

[tool.pylint.DESIGN]
# Maximum number of arguments for function / method
max-args = "6"

# Maximum number of locals for function / method body
max-locals = "20"

# Maximum number of branch for function / method body
max-branches = "20"

[tool.pylint.SIMILARITIES]
# Minimum lines number of a similarity.
min-similarity-lines = "6"

[tool.pylint.REPORTS]
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"
