# Generated by Django 4.2 on 2023-08-24 06:01

import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pathlib


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0045_remove_projectsubsector_multi_year_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="projectfile",
            name="file",
            field=models.FileField(
                storage=django.core.files.storage.FileSystemStorage(
                    location=pathlib.PurePosixPath(
                        "/home/kiro/PycharmProjects/ors/.fs/protected_media"
                    )
                ),
                upload_to="project_files/",
            ),
        ),
        migrations.CreateModel(
            name="ProjectProgressReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "meeting_of_report",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="multi-year/one-off phaseout/individual/rmp/rmp update",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("assessment_of_progress", models.TextField(blank=True, null=True)),
                (
                    "latest_progress",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("mtg", models.PositiveIntegerField(blank=True, null=True)),
                ("num", models.PositiveIntegerField(blank=True, null=True)),
                ("a_n", models.CharField(blank=True, max_length=1, null=True)),
                ("o_t", models.CharField(blank=True, max_length=1, null=True)),
                ("irdx", models.CharField(blank=True, max_length=1, null=True)),
                ("chemical", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "consumption_odp_out_proposal",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "consumption_odp_out_actual",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "production_odp_out_proposal",
                    models.FloatField(blank=True, null=True),
                ),
                ("production_odp_out_actual", models.FloatField(blank=True, null=True)),
                ("date_approved", models.DateField(blank=True, null=True)),
                ("date_first_disbursement", models.DateField(blank=True, null=True)),
                ("date_comp_proposal", models.DateField(blank=True, null=True)),
                ("date_comp_plan", models.DateField(blank=True, null=True)),
                ("date_comp_actual", models.DateField(blank=True, null=True)),
                ("date_comp_financial", models.DateField(blank=True, null=True)),
                ("funds_approved", models.FloatField(blank=True, null=True)),
                ("funds_adjustment", models.FloatField(blank=True, null=True)),
                ("funds_net", models.FloatField(blank=True, null=True)),
                ("funds_disbursed", models.FloatField(blank=True, null=True)),
                ("percent_disbursed", models.FloatField(blank=True, null=True)),
                ("balance", models.FloatField(blank=True, null=True)),
                ("funds_obligated", models.FloatField(blank=True, null=True)),
                ("funds_current_year", models.FloatField(blank=True, null=True)),
                ("support_approved", models.FloatField(blank=True, null=True)),
                ("support_adjustment", models.FloatField(blank=True, null=True)),
                ("support_disbursed", models.FloatField(blank=True, null=True)),
                ("support_balance", models.FloatField(blank=True, null=True)),
                ("support_obligated", models.FloatField(blank=True, null=True)),
                ("support_returned", models.FloatField(blank=True, null=True)),
                (
                    "year_approved",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1985)],
                    ),
                ),
                (
                    "year_of_contribution",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1985)],
                    ),
                ),
                (
                    "months_first_disbursement",
                    models.IntegerField(blank=True, null=True),
                ),
                ("months_comp_proposal", models.IntegerField(blank=True, null=True)),
                ("months_comp_plan", models.IntegerField(blank=True, null=True)),
                ("months_comp_actual", models.IntegerField(blank=True, null=True)),
                ("remarks_1", models.TextField(blank=True, null=True)),
                ("remarks_2", models.TextField(blank=True, null=True)),
                ("date_comp_plan_22", models.DateField(blank=True, null=True)),
                ("date_comp_plan_28", models.DateField(blank=True, null=True)),
                ("date_comp_plan_31", models.DateField(blank=True, null=True)),
                ("date_comp_plan_34", models.DateField(blank=True, null=True)),
                ("date_comp_plan_37", models.DateField(blank=True, null=True)),
                ("date_comp_plan_40", models.DateField(blank=True, null=True)),
                ("date_comp_plan_43", models.DateField(blank=True, null=True)),
                ("date_comp_plan_46", models.DateField(blank=True, null=True)),
                ("date_comp_plan_52", models.DateField(blank=True, null=True)),
                ("latest_planned_date", models.DateField(blank=True, null=True)),
                ("BP_year", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "BP_allocation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "disbursements_to_final",
                    models.FloatField(
                        blank=True,
                        help_text="Disbursements made to final beneficiaries from FECO/ MEP",
                        null=True,
                    ),
                ),
                (
                    "MY_consumption_performance_target",
                    models.FloatField(blank=True, null=True),
                ),
                ("MY_actual_consumption", models.FloatField(blank=True, null=True)),
                (
                    "MY_production_performance_target",
                    models.FloatField(blank=True, null=True),
                ),
                ("MY_actual_production", models.FloatField(blank=True, null=True)),
                (
                    "MY_annual_target_met",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "MY_verification_completed",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "MY_verification_report",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "latest_status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.projectstatus",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progress_reports",
                        to="core.project",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.projectstatus",
                    ),
                ),
            ],
        ),
    ]
