# Generated by Django 4.2.16 on 2024-12-05 18:48

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0176_remove_bpactivity_comment_types_and_more"),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
            CREATE VIEW all_prices_view AS
            WITH all_prices AS (
                    (SELECT cp_prices.id,
                            cp_prices.substance_id,
                            cp_prices.blend_id,
                            cp_prices.display_name,
                            cp_prices.remarks,
                            cp_prices.is_retail,
                            cp_prices.is_fob,
                            cp_prices.previous_year_price,
                            cp_prices.current_year_price,
                            cp_prices.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            FALSE AS is_archive
                    FROM cp_prices
                    JOIN cp_report AS cpr ON cp_prices.country_programme_report_id = cpr.id)
                UNION
                    (SELECT cp_prices_archive.id,
                            cp_prices_archive.substance_id,
                            cp_prices_archive.blend_id,
                            cp_prices_archive.display_name,
                            cp_prices_archive.remarks,
                            cp_prices_archive.is_retail,
                            cp_prices_archive.is_fob,
                            cp_prices_archive.previous_year_price,
                            cp_prices_archive.current_year_price,
                            cp_prices_archive.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            TRUE AS is_archive
                    FROM cp_prices_archive
                    JOIN cp_report_archive AS cpr ON cp_prices_archive.country_programme_report_id = cpr.id)
            )
            SELECT all_prices.id,
                all_prices.substance_id,
                s.name AS substance_name,
                s.group_id,
                g.name_alt AS group_name,
                all_prices.blend_id,
                b.name AS blend_name,
                all_prices.display_name,
                all_prices.remarks,
                all_prices.is_retail,
                all_prices.is_fob,
                all_prices.previous_year_price,
                all_prices.current_year_price,
                all_prices.country_programme_report_id,
                all_prices.country_id,
                c.name AS country_name,
                all_prices.version,
                all_prices.created_at,
                all_prices.year,
                all_prices.is_archive
            FROM all_prices
            LEFT JOIN core_substance AS s ON all_prices.substance_id = s.id
            LEFT JOIN core_group AS g ON s.group_id = g.id
            LEFT JOIN core_blend AS b ON all_prices.blend_id = b.id
            JOIN core_country AS c ON all_prices.country_id = c.id
            """,
            reverse_sql="DROP VIEW all_prices_view",
        ),
        migrations.RunSQL(
            sql="""
            CREATE VIEW all_emissions_view AS
            WITH all_emissions AS (
                    (SELECT cp_emission.id,
                            cp_emission.facility,
                            cp_emission.total,
                            cp_emission.all_uses,
                            cp_emission.feedstock_gc,
                            cp_emission.destruction,
                            cp_emission.feedstock_wpc,
                            cp_emission.destruction_wpc,
                            cp_emission.generated_emissions,
                            cp_emission.remarks,
                            cp_emission.source_file,
                            cp_emission.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            FALSE AS is_archive
                    FROM cp_emission
                    JOIN cp_report AS cpr ON cp_emission.country_programme_report_id = cpr.id)
                UNION
                    (SELECT cp_emission_archive.id,
                            cp_emission_archive.facility,
                            cp_emission_archive.total,
                            cp_emission_archive.all_uses,
                            cp_emission_archive.feedstock_gc,
                            cp_emission_archive.destruction,
                            cp_emission_archive.feedstock_wpc,
                            cp_emission_archive.destruction_wpc,
                            cp_emission_archive.generated_emissions,
                            cp_emission_archive.remarks,
                            cp_emission_archive.source_file,
                            cp_emission_archive.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            TRUE AS is_archive
                    FROM cp_emission_archive
                    JOIN cp_report_archive AS cpr ON cp_emission_archive.country_programme_report_id = cpr.id))
            SELECT all_emissions.id,
                all_emissions.facility,
                all_emissions.total,
                all_emissions.all_uses,
                all_emissions.feedstock_gc,
                all_emissions.destruction,
                all_emissions.feedstock_wpc,
                all_emissions.destruction_wpc,
                all_emissions.generated_emissions,
                all_emissions.remarks,
                all_emissions.source_file,
                all_emissions.country_programme_report_id,
                all_emissions.country_id,
                c.name AS country_name,
                all_emissions.version,
                all_emissions.year,
                all_emissions.is_archive
            FROM all_emissions
            JOIN core_country AS c ON all_emissions.country_id = c.id
            """,
            reverse_sql="DROP VIEW all_emissions_view",
        ),
        migrations.RunSQL(
            sql="""
            CREATE VIEW all_generations_view AS
            WITH all_generations AS (
                    (SELECT cp_generation.id,
                            cp_generation.all_uses,
                            cp_generation.feedstock,
                            cp_generation.destruction,
                            cp_generation.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            FALSE AS is_archive
                    FROM cp_generation
                    JOIN cp_report AS cpr ON cp_generation.country_programme_report_id = cpr.id)
                UNION
                    (SELECT cp_generation_archive.id,
                            cp_generation_archive.all_uses,
                            cp_generation_archive.feedstock,
                            cp_generation_archive.destruction,
                            cp_generation_archive.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            TRUE AS is_archive
                    FROM cp_generation_archive
                    JOIN cp_report_archive AS cpr ON cp_generation_archive.country_programme_report_id = cpr.id))
            SELECT all_generations.id,
                all_generations.all_uses,
                all_generations.feedstock,
                all_generations.destruction,
                all_generations.country_programme_report_id,
                all_generations.country_id,
                c.name AS country_name,
                all_generations.version,
                all_generations.year,
                all_generations.is_archive
            FROM all_generations
            JOIN core_country AS c ON all_generations.country_id = c.id
            """,
            reverse_sql="DROP VIEW all_generations_view",
        ),
        migrations.RunSQL(
            sql="""
            CREATE VIEW all_records_view AS
            WITH all_records AS (
                    (SELECT cp_record.id,
                            cp_record.substance_id,
                            cp_record.blend_id,
                            cp_record.display_name,
                            cp_record.section,
                            cp_record.imports,
                            cp_record.import_quotas,
                            cp_record.exports,
                            cp_record.export_quotas,
                            cp_record.production,
                            cp_record.manufacturing_blends,
                            cp_record.banned_date,
                            cp_record.remarks,
                            cp_record.source_file,
                            cp_record.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            FALSE AS is_archive
                    FROM cp_record
                    JOIN cp_report AS cpr ON cp_record.country_programme_report_id = cpr.id)
                UNION
                    (SELECT cp_record_archive.id,
                            cp_record_archive.substance_id,
                            cp_record_archive.blend_id,
                            cp_record_archive.display_name,
                            cp_record_archive.section,
                            cp_record_archive.imports,
                            cp_record_archive.import_quotas,
                            cp_record_archive.exports,
                            cp_record_archive.export_quotas,
                            cp_record_archive.production,
                            cp_record_archive.manufacturing_blends,
                            cp_record_archive.banned_date,
                            cp_record_archive.remarks,
                            cp_record_archive.source_file,
                            cp_record_archive.country_programme_report_id,
                            cpr.country_id,
                            cpr.version,
                            cpr.created_at,
                            cpr.year,
                            TRUE AS is_archive
                    FROM cp_record_archive
                    JOIN cp_report_archive AS cpr ON cp_record_archive.country_programme_report_id = cpr.id))
            SELECT all_records.id,
                all_records.substance_id,
                s.name AS substance_name,
                s.group_id,
                g.name AS group_name,
                all_records.blend_id,
                b.name AS blend_name,
                all_records.display_name,
                all_records.section,
                all_records.imports,
                all_records.import_quotas,
                all_records.exports,
                all_records.export_quotas,
                all_records.production,
                all_records.manufacturing_blends,
                all_records.banned_date,
                all_records.remarks,
                all_records.source_file,
                all_records.country_programme_report_id,
                all_records.country_id,
                c.name AS country_name,
                c.is_lvc AS country_is_lvc,
                all_records.version,
                all_records.created_at,
                all_records.year,
                all_records.is_archive
            FROM all_records
            LEFT JOIN core_substance AS s ON all_records.substance_id = s.id
            LEFT JOIN core_group AS g ON s.group_id = g.id
            LEFT JOIN core_blend AS b ON all_records.blend_id = b.id
            JOIN core_country AS c ON all_records.country_id = c.id
            """,
            reverse_sql="DROP VIEW all_records_view",
        ),
        migrations.RunSQL(
            sql="""
            WITH all_cp_usage AS (
                    (SELECT "cp_usage"."id",
                            "cp_usage"."usage_id",
                            "cp_usage"."quantity",
                            "cp_usage"."country_programme_record_id",
                            FALSE AS is_archive
                        FROM "cp_usage")
                UNION
                    (SELECT "cp_usage_archive"."id",
                            "cp_usage_archive"."usage_id",
                            "cp_usage_archive"."quantity",
                            "cp_usage_archive"."country_programme_record_id",
                            TRUE AS is_archive
                        FROM "cp_usage_archive"))
            SELECT all_cp_usage.id,
                all_cp_usage.usage_id,
                all_cp_usage.quantity,
                all_cp_usage.country_programme_record_id,
                all_cp_usage.is_archive
            FROM all_cp_usage
            """,
            reverse_sql="DROP VIEW all_cp_usage",
        ),
    ]
