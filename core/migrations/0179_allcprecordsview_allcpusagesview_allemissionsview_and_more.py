# Generated by Django 4.2.16 on 2024-12-13 09:57

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0178_create_cp_views"),
    ]

    operations = [
        migrations.CreateModel(
            name="AllCPRecordsView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("substance_name", models.CharField(max_length=255)),
                ("substance_group_id", models.IntegerField()),
                ("substance_group_name", models.CharField(max_length=255)),
                ("substance_sort_order", models.FloatField(blank=True, null=True)),
                ("blend_name", models.CharField(max_length=255)),
                ("blend_sort_order", models.FloatField(blank=True, null=True)),
                ("display_name", models.CharField(max_length=255)),
                ("section", models.CharField(max_length=255)),
                (
                    "imports",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=25, null=True
                    ),
                ),
                (
                    "import_quotas",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=25, null=True
                    ),
                ),
                (
                    "exports",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=25, null=True
                    ),
                ),
                (
                    "export_quotas",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=25, null=True
                    ),
                ),
                (
                    "production",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=25, null=True
                    ),
                ),
                (
                    "manufacturing_blends",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=25, null=True
                    ),
                ),
                ("banned_date", models.DateField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("country_programme_report_id", models.IntegerField()),
                ("source_file", models.CharField(max_length=248)),
                ("country_id", models.IntegerField()),
                ("country_name", models.CharField(max_length=255)),
                ("country_is_lvc", models.BooleanField()),
                ("report_version", models.IntegerField()),
                ("report_created_at", models.DateTimeField()),
                ("report_year", models.IntegerField()),
                ("report_status", models.CharField(max_length=255)),
                ("is_archive", models.BooleanField()),
            ],
            options={
                "db_table": "all_cp_records_view",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllCPUsagesView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("usage_id", models.IntegerField()),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=25, null=True
                    ),
                ),
                ("country_programme_record_id", models.IntegerField()),
                ("is_archive", models.BooleanField()),
            ],
            options={
                "db_table": "all_cp_usage_view",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllEmissionsView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "facility",
                    models.CharField(
                        help_text="Facility name or identifier", max_length=256
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Total amount generated",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "all_uses",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Amount generated and captured - For all uses",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "feedstock_gc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Amount generated and captured - For feedstock use in your country",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "destruction",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Amount generated and captured - For destruction",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "feedstock_wpc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Captured for feedstock uses within your country",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "destruction_wpc",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Amount used for feedstock without prior capture",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "generated_emissions",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Captured for destruction",
                        max_digits=25,
                        null=True,
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                ("source_file", models.CharField(max_length=248)),
                ("country_programme_report_id", models.IntegerField()),
                ("country_id", models.IntegerField()),
                ("country_name", models.CharField(max_length=255)),
                ("report_version", models.IntegerField()),
                ("report_created_at", models.DateTimeField()),
                ("report_year", models.IntegerField()),
                ("report_status", models.CharField(max_length=255)),
                ("is_archive", models.BooleanField()),
            ],
            options={
                "db_table": "all_emissions_view",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllGenerationsView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "all_uses",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Captured for all uses",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "feedstock",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Captured for feedstock uses within your country",
                        max_digits=25,
                        null=True,
                    ),
                ),
                (
                    "destruction",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Captured for destruction",
                        max_digits=25,
                        null=True,
                    ),
                ),
                ("source_file", models.CharField(max_length=248)),
                ("country_programme_report_id", models.IntegerField()),
                ("country_id", models.IntegerField()),
                ("country_name", models.CharField(max_length=255)),
                ("report_version", models.IntegerField()),
                ("report_created_at", models.DateTimeField()),
                ("report_year", models.IntegerField()),
                ("report_status", models.CharField(max_length=255)),
                ("is_archive", models.BooleanField()),
            ],
            options={
                "db_table": "all_generations_view",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllPricesView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("substance_id", models.IntegerField()),
                ("substance_name", models.CharField(max_length=255)),
                ("substance_group_id", models.IntegerField()),
                ("substance_group_name", models.CharField(max_length=255)),
                ("blend_id", models.IntegerField()),
                ("blend_name", models.CharField(max_length=255)),
                ("display_name", models.CharField(max_length=255)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("is_retail", models.BooleanField(default=False)),
                ("is_fob", models.BooleanField(default=False)),
                (
                    "previous_year_price",
                    models.CharField(blank=True, max_length=248, null=True),
                ),
                (
                    "current_year_price",
                    models.CharField(blank=True, max_length=248, null=True),
                ),
                ("country_programme_report_id", models.IntegerField()),
                ("source_file", models.CharField(max_length=248)),
                ("country_id", models.IntegerField()),
                ("country_name", models.CharField(max_length=255)),
                ("report_version", models.IntegerField()),
                ("report_created_at", models.DateTimeField()),
                ("report_year", models.IntegerField()),
                ("report_status", models.CharField(max_length=255)),
                ("is_archive", models.BooleanField()),
            ],
            options={
                "db_table": "all_prices_view",
                "managed": False,
            },
        ),
    ]
